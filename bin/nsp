#!/usr/bin/env bash
# ------------------------------------------------
# Script   : nsp 
# Descrição: a tool to create new scripts
# Versão   : 0.1.0
# Autor    : Vinicius https://github.com/souovan
# Data     : 6/12/2021
# Liçenca  : GNU/GPL v3.0
# ------------------------------------------------
# Uso: nsp -h
# ------------------------------------------------

# Opções...
# Editor default
editor="nano"

# Variáveis

RED="\033[1;31m"
YELLOW="\033[1;33m"
NORMAL="\033[0m"

script=$1

version="0.1.0"

today=$( date +'%d/%m/%Y' )

header="#!/usr/bin/env bash
# ------------------------------------------------
# Script   : $1
# Descrição:
# Versão   : 0.0.1
# Autor    : Vinicius https://github.com/souovan
# Data     : $today
# Liçenca  : GNU/GPL v3.0
# ------------------------------------------------
# Uso:
# ------------------------------------------------
"

help="
    usage: nsp [<option>] [<editor_name>] <new_script_name>
        or
        nsp [optional arguments]

    A bashscript to create new bashscripts

        option:
        -e | --editor          which editor should the new bashscript be opened with
                            if no editor was informed the bashscript will be opened in
                            nano editor

        optional arguments:
        -h | --help            show this help message and exit
        -v | --version         show program's version number and exit
" 

# Verifica se o primeiro argumento é igual -h ou --help e exibe a ajuda do script
if [[ $1 = "-h" || $1 = "--help" || $1 = "" ]]; then
    echo "$help" && exit 0
fi

# Verifica se o primeiro argumento é igual -v ou --version e exibe a ajuda do script
if [[ $1 = "-v" || $1 = "--version" || $1 = "" ]]; then
    echo "$version" && exit 0
fi

# Verifica se o primeiro argumento é igual a -e ou --editor e executa a lógica do script
if [[ $1 = "-e" || $1 = "--editor" || $1 = "" ]]; then
    
    # Verifica se foram passados mais de 3 argumentos e exibe a ajuda do script
    [[ $# -gt 3 ]] && echo "$help" && exit 1

    # Verifica se os argumentos após -e ou --editor estão vazios e exibe a ajuda do script
    if [[ $2 = "" || $3 = "" ]]; then 
        echo "$help" && exit 1 
    fi

    # Verifica se o editor escolhido está instalado ou utiliza o padrão (nano)
    type $2 &> /dev/null
    [[ $? -ne 0 ]] && echo -e "$RED O editor *$2* não está instalado, utilize um editor válido $NORMAL" && echo "$help" && exit 1
    editor=$2
    script=$3

    # Testar se arquivo já existe...
    [[ -f ~/bin/$script ]] && echo -e  "$YELLOW O script $script já existe $NORMAL" && exit 1

    echo "$header" > ~/bin/$script
    chmod +x ~/bin/$script
    $editor ~/bin/$script

else

[[ $# -ne 1 ]] && echo -e "$RED Número de argumentos inválido $NORMAL" && echo "$help" && exit 1 

[[ -f ~/bin/$script ]] && echo -e  "$YELLOW O script $script já existe $NORMAL" && exit 1

echo "$header" > ~/bin/$script
chmod +x ~/bin/$script
$editor ~/bin/$script

fi